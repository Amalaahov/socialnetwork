{"ast":null,"code":"const UP_STATUS_TEXT = 'UP_STATUS_TEXT';\nconst UP_JOB = 'UP_JOB';\nconst UP_CITY = 'UP_CITY';\nconst SET_STATUS = 'SET_STATUS';\nlet InitialState = {\n  status: 'Статус',\n  job: 'Работа',\n  city: 'Город'\n};\n\nconst ProfileReducer = (state = InitialState, action) => {\n  switch (action.type) {\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case UP_STATUS_TEXT:\n      {\n        let copyState = { ...state\n        };\n        copyState.status = action.newTextMessage;\n        return copyState;\n      }\n\n    case UP_JOB:\n      {\n        let copyState = { ...state\n        };\n        copyState.job = action.NewTextJob;\n        return copyState;\n      }\n\n    case UP_CITY:\n      {\n        let copyState = { ...state\n        };\n        copyState.city = action.NewTextCity;\n        return copyState;\n      }\n\n    default:\n      return state;\n  }\n};\n\n_c = ProfileReducer;\nexport default ProfileReducer;\nexport const UpdateStatusAC = newTextMessage => ({\n  type: UP_STATUS_TEXT,\n  newTextMessage\n});\n_c2 = UpdateStatusAC;\nexport const UpdateJobAC = NewTextJob => ({\n  type: UP_JOB,\n  NewTextJob\n});\n_c3 = UpdateJobAC;\nexport const UpdateCityAC = NewTextCity => ({\n  type: UP_CITY,\n  NewTextCity\n});\n_c4 = UpdateCityAC;\nexport const SetStatusAC = status = {\n  type: SET_STATUS,\n  status\n};\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ProfileReducer\");\n$RefreshReg$(_c2, \"UpdateStatusAC\");\n$RefreshReg$(_c3, \"UpdateJobAC\");\n$RefreshReg$(_c4, \"UpdateCityAC\");","map":{"version":3,"sources":["/Users/malaahov/Documents/ReactJS/SocialNetwork/socialnetwork/src/redux/reducer/profilereducer.js"],"names":["UP_STATUS_TEXT","UP_JOB","UP_CITY","SET_STATUS","InitialState","status","job","city","ProfileReducer","state","action","type","copyState","newTextMessage","NewTextJob","NewTextCity","UpdateStatusAC","UpdateJobAC","UpdateCityAC","SetStatusAC"],"mappings":"AAAA,MAAMA,cAAc,GAAE,gBAAtB;AACA,MAAMC,MAAM,GAAC,QAAb;AACA,MAAMC,OAAO,GAAC,SAAd;AACA,MAAMC,UAAU,GAAC,YAAjB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,QADO;AAEfC,EAAAA,GAAG,EAAC,QAFW;AAGfC,EAAAA,IAAI,EAAE;AAHS,CAAnB;;AAOA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KACvB;AACI,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKR,UAAL;AACA;AACI,eAAO,EACH,GAAGM,KADA;AAEHJ,UAAAA,MAAM,EAAEK,MAAM,CAACL;AAFZ,SAAP;AAKH;;AACD,SAAKL,cAAL;AACA;AACE,YAAIY,SAAS,GAAE,EAAC,GAAGH;AAAJ,SAAf;AACAG,QAAAA,SAAS,CAACP,MAAV,GAAmBK,MAAM,CAACG,cAA1B;AACA,eAAOD,SAAP;AACD;;AACD,SAAKX,MAAL;AACA;AACI,YAAIW,SAAS,GAAC,EAAC,GAAGH;AAAJ,SAAd;AACAG,QAAAA,SAAS,CAACN,GAAV,GAAeI,MAAM,CAACI,UAAtB;AACA,eAAOF,SAAP;AACH;;AACD,SAAKV,OAAL;AACA;AACI,YAAIU,SAAS,GAAC,EAAC,GAAGH;AAAJ,SAAd;AACAG,QAAAA,SAAS,CAACL,IAAV,GAAgBG,MAAM,CAACK,WAAvB;AACA,eAAOH,SAAP;AACH;;AACD;AACI,aAAOH,KAAP;AA7BR;AAgCH,CAlCD;;KAAMD,c;AAoCN,eAAeA,cAAf;AAGA,OAAO,MAAMQ,cAAc,GAAIH,cAAD,KAAqB;AAACF,EAAAA,IAAI,EAAEX,cAAP;AAAuBa,EAAAA;AAAvB,CAArB,CAAvB;MAAMG,c;AACb,OAAO,MAAMC,WAAW,GAAIH,UAAD,KAAiB;AAACH,EAAAA,IAAI,EAACV,MAAN;AAAca,EAAAA;AAAd,CAAjB,CAApB;MAAMG,W;AACb,OAAO,MAAMC,YAAY,GAAIH,WAAD,KAAkB;AAACJ,EAAAA,IAAI,EAACT,OAAN;AAAea,EAAAA;AAAf,CAAlB,CAArB;MAAMG,Y;AACb,OAAO,MAAMC,WAAW,GAAId,MAAD,GAAY;AAACM,EAAAA,IAAI,EAACR,UAAN;AAAiBE,EAAAA;AAAjB,CAAhC","sourcesContent":["const UP_STATUS_TEXT= 'UP_STATUS_TEXT';\nconst UP_JOB='UP_JOB';\nconst UP_CITY='UP_CITY';\nconst SET_STATUS='SET_STATUS';\n\nlet InitialState = {\n    status: 'Статус',\n    job:'Работа',\n    city: 'Город'\n}\n\n\nconst ProfileReducer = (state = InitialState, action) =>\n{\n    switch (action.type)\n    {\n        case SET_STATUS:\n        {\n            return {\n                ...state,\n                status: action.status,\n            }\n\n        }\n        case UP_STATUS_TEXT:\n        {\n          let copyState= {...state};\n          copyState.status = action.newTextMessage;\n          return copyState;\n        }\n        case UP_JOB:\n        {\n            let copyState={...state};\n            copyState.job =action.NewTextJob;\n            return copyState;\n        }\n        case UP_CITY:\n        {\n            let copyState={...state};\n            copyState.city= action.NewTextCity;\n            return copyState;\n        }\n        default:\n            return state;\n    }\n\n}\n\nexport default ProfileReducer;\n\n\nexport const UpdateStatusAC = (newTextMessage) => ({type: UP_STATUS_TEXT, newTextMessage});\nexport const UpdateJobAC = (NewTextJob) => ({type:UP_JOB, NewTextJob});\nexport const UpdateCityAC = (NewTextCity) => ({type:UP_CITY, NewTextCity});\nexport const SetStatusAC = (status) = ({type:SET_STATUS,status});\n\n\n"]},"metadata":{},"sourceType":"module"}