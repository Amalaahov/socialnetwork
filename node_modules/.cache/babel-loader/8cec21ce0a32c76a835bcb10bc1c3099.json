{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Volumes/4 TB/ReactJS/react/lesson1/myapp/src/components/Dialogs/Dialogs.jsx\";\nimport React from 'react';\nimport classes from './Dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { UpdateMessageTextCreator } from \"../../redux/state\";\n\nconst DialogItem = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(NavLink, {\n      className: classes.item,\n      activeClassName: classes.active,\n      to: '/dialogs/' + props.id,\n      children: props.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = DialogItem;\n\nconst Message = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", props.message, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = Message;\n\nconst Dialogs = props => {\n  let NewMessageElement = /*#__PURE__*/React.createRef();\n\n  let addMessage = () => {\n    props.dispatch({\n      type: 'ADD-MESSAGE'\n    });\n  };\n\n  let NewMessageText = NewMessageElement;\n\n  let UpdateMessageText = () => {\n    let text = NewMessageText.current.value;\n    props.dispatch(UpdateMessageTextCreator(text));\n  };\n\n  let messageElement = props.MessengerData.MessageData.map(m => /*#__PURE__*/_jsxDEV(Message, {\n    message: m.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 68\n  }, this));\n  let dialogElement = props.MessengerData.DialogsData.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: d.name,\n    id: d.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 67\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: props.MessengerData.NewMessageText,\n      onChange: UpdateMessageText,\n      ref: NewMessageElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addMessage,\n      children: \"\\u041E\\u0422\\u041F\\u0420\\u0410\\u0412\\u0418\\u0422\\u042C \\u0421\\u041E\\u041E\\u0411\\u0429\\u0415\\u041D\\u0418\\u0415\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 127\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dialogs,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.item,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: dialogElement\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messageElement\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Dialogs;\nexport default Dialogs;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DialogItem\");\n$RefreshReg$(_c2, \"Message\");\n$RefreshReg$(_c3, \"Dialogs\");","map":{"version":3,"sources":["/Volumes/4 TB/ReactJS/react/lesson1/myapp/src/components/Dialogs/Dialogs.jsx"],"names":["React","classes","NavLink","UpdateMessageTextCreator","DialogItem","props","item","active","id","name","Message","message","Dialogs","NewMessageElement","createRef","addMessage","dispatch","type","NewMessageText","UpdateMessageText","text","current","value","messageElement","MessengerData","MessageData","map","m","dialogElement","DialogsData","d","dialogs"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAAQC,wBAAR,QAAuC,mBAAvC;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IACnB;AAGI,sBACI;AAAA,2BAAK,QAAC,OAAD;AAAS,MAAA,SAAS,EAAEJ,OAAO,CAACK,IAA5B;AAAkC,MAAA,eAAe,EAAEL,OAAO,CAACM,MAA3D;AAAmE,MAAA,EAAE,EAAE,cAAYF,KAAK,CAACG,EAAzF;AAAA,gBAA8FH,KAAK,CAACI;AAApG;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAPD;;KAAML,U;;AASN,MAAMM,OAAO,GAAIL,KAAD,IAAW;AACvB,sBAEI;AAAA,oBAAOA,KAAK,CAACM,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAMH,CAPD;;MAAMD,O;;AAeN,MAAME,OAAO,GAAIP,KAAD,IAAW;AACvB,MAAIQ,iBAAiB,gBAAGb,KAAK,CAACc,SAAN,EAAxB;;AACA,MAAIC,UAAU,GAAG,MACjB;AACJV,IAAAA,KAAK,CAACW,QAAN,CAAgB;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAhB;AACK,GAHD;;AAIA,MAAIC,cAAc,GAAGL,iBAArB;;AACA,MAAIM,iBAAiB,GAAG,MACxB;AACI,QAAIC,IAAI,GAAGF,cAAc,CAACG,OAAf,CAAuBC,KAAlC;AACAjB,IAAAA,KAAK,CAACW,QAAN,CAAeb,wBAAwB,CAACiB,IAAD,CAAvC;AACH,GAJD;;AAMA,MAAIG,cAAc,GAAGlB,KAAK,CAACmB,aAAN,CAAoBC,WAApB,CAAgCC,GAAhC,CAAqCC,CAAC,iBAAI,QAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,CAAC,CAAChB;AAApB;AAAA;AAAA;AAAA;AAAA,UAA1C,CAArB;AACA,MAAIiB,aAAa,GAAGvB,KAAK,CAACmB,aAAN,CAAoBK,WAApB,CAAgCH,GAAhC,CAAqCI,CAAC,iBAAI,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEA,CAAC,CAACrB,IAApB;AAA0B,IAAA,EAAE,EAAEqB,CAAC,CAACtB;AAAhC;AAAA;AAAA;AAAA;AAAA,UAA1C,CAApB;AAEJ,sBACI;AAAA,4BAAK;AAAU,MAAA,KAAK,EAAEH,KAAK,CAACmB,aAAN,CAAoBN,cAArC;AAAqD,MAAA,QAAQ,EAAEC,iBAA/D;AAAkF,MAAA,GAAG,EAAEN;AAAvF;AAAA;AAAA;AAAA;AAAA,YAAL,eAA0H;AAAQ,MAAA,OAAO,EAAEE,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA1H,eACA;AAAK,MAAA,SAAS,EAAEd,OAAO,CAAC8B,OAAxB;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAE9B,OAAO,CAACK,IAAxB;AAAA,+BAEQ;AAAA,iCAAK;AAAA,sBAAKsB;AAAL;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,cAFJ,eAOI;AAAA,kBAEIL;AAFJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBC,CAnCD;;MAAMX,O;AAqCN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport {UpdateMessageTextCreator} from \"../../redux/state\";\r\n\r\n\r\nconst DialogItem = (props) =>\r\n{\r\n\r\n\r\n    return(\r\n        <div><NavLink className={classes.item} activeClassName={classes.active} to={'/dialogs/'+props.id}>{props.name}</NavLink></div>\r\n    )\r\n}\r\n\r\nconst Message = (props) => {\r\n    return(\r\n\r\n        <div> {props.message} </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    let NewMessageElement = React.createRef();\r\n    let addMessage = () =>\r\n    {\r\nprops.dispatch ({type: 'ADD-MESSAGE'});\r\n    }\r\n    let NewMessageText = NewMessageElement;\r\n    let UpdateMessageText = () =>\r\n    {\r\n        let text = NewMessageText.current.value;\r\n        props.dispatch(UpdateMessageTextCreator(text));\r\n    }\r\n\r\n    let messageElement = props.MessengerData.MessageData.map (m => <Message message={m.message} />);\r\n    let dialogElement = props.MessengerData.DialogsData.map (d => <DialogItem name={d.name} id={d.id} />);\r\n\r\nreturn(\r\n    <div><textarea value={props.MessengerData.NewMessageText} onChange={UpdateMessageText} ref={NewMessageElement}></textarea><button onClick={addMessage}>ОТПРАВИТЬ СООБЩЕНИЕ</button>\r\n    <div className={classes.dialogs}>\r\n\r\n        <div className={classes.item}>\r\n\r\n                <div><b>{ dialogElement }</b></div>\r\n\r\n        </div>\r\n        <div>\r\n\r\n           {messageElement}\r\n  </div>\r\n\r\n    </div>\r\n    </div>\r\n\r\n)\r\n\r\n}\r\n\r\nexport default Dialogs;\r\n"]},"metadata":{},"sourceType":"module"}