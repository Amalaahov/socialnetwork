{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nlet initialState = {\n  users: [{\n    id: 1,\n    followed: false,\n    FullName: 'Скарлет Йоханссон',\n    status: '11',\n    location: {\n      city: 'Hollywood',\n      country: 'USA'\n    },\n    Ava: 'https://thumbs.dfs.ivi.ru/storage33/contents/f/b/722ce30ba1a228f9d1aa5650db3aea.jpg'\n  }],\n  newTextPost: 'Новое сообщение'\n};\n\nconst usersreducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      {\n        let stateCopy = { ...state,\n          users: state.users.map(u => {\n            if (u.id === action.userId) {\n              return { ...u,\n                followed: true\n              };\n            }\n\n            return u;\n          })\n        };\n      }\n\n    case UNFOLLOW:\n      {\n        let stateCopy = { ...state,\n          users: state.users.map(u => {\n            if (u.id === action.userId) {\n              return { ...u,\n                followed: false\n              };\n            }\n\n            return u;\n          })\n        };\n      }\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: [...state.users, ...action.users]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport default usersreducer;","map":{"version":3,"sources":["/Volumes/4 TB/ReactJS/react/lesson1/myapp/src/redux/reducer/usersreducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","initialState","users","id","followed","FullName","status","location","city","country","Ava","newTextPost","usersreducer","state","action","type","stateCopy","map","u","userId","followAC","unfollowAC","setUsersAC"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,SAAS,GAAG,WAAlB;AAIA,IAAIC,YAAY,GAAG;AAGZC,EAAAA,KAAK,EAAE,CACF;AACIC,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,QAAQ,EAAE,KAFd;AAGIC,IAAAA,QAAQ,EAAE,mBAHd;AAIIC,IAAAA,MAAM,EAAE,IAJZ;AAKGC,IAAAA,QAAQ,EAAE;AAACC,MAAAA,IAAI,EAAE,WAAP;AAAoBC,MAAAA,OAAO,EAAE;AAA7B,KALb;AAMIC,IAAAA,GAAG,EAAE;AANT,GADE,CAHK;AAeXC,EAAAA,WAAW,EAAE;AAfF,CAAnB;;AAqBA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGZ,YAAT,EAAwBa,MAAxB,KAAmC;AAGpD,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKjB,MAAL;AAAY;AACR,YAAIkB,SAAS,GAAG,EACZ,GAAGH,KADS;AAEZX,UAAAA,KAAK,EAAEW,KAAK,CAACX,KAAN,CAAYe,GAAZ,CAAgBC,CAAC,IAAG;AACvB,gBAAGA,CAAC,CAACf,EAAF,KAASW,MAAM,CAACK,MAAnB,EACA;AACI,qBAAO,EAAC,GAAGD,CAAJ;AAAOd,gBAAAA,QAAQ,EAAE;AAAjB,eAAP;AACH;;AACD,mBAAOc,CAAP;AACH,WANM;AAFK,SAAhB;AAUH;;AACG,SAAKnB,QAAL;AACI;AACJ,YAAIiB,SAAS,GAAG,EACZ,GAAGH,KADS;AAEZX,UAAAA,KAAK,EAAEW,KAAK,CAACX,KAAN,CAAYe,GAAZ,CAAgBC,CAAC,IAAG;AACvB,gBAAGA,CAAC,CAACf,EAAF,KAASW,MAAM,CAACK,MAAnB,EACA;AACI,qBAAO,EAAC,GAAGD,CAAJ;AAAOd,gBAAAA,QAAQ,EAAE;AAAjB,eAAP;AACH;;AACD,mBAAOc,CAAP;AACH,WANM;AAFK,SAAhB;AAUH;;AACG,SAAKlB,SAAL;AACI;AACI,eAAM,EAAC,GAAGa,KAAJ;AAAWX,UAAAA,KAAK,EAAC,CAAC,GAAGW,KAAK,CAACX,KAAV,EAAiB,GAAGY,MAAM,CAACZ,KAA3B;AAAjB,SAAN;AACH;;AACT;AACI,aAAOW,KAAP;AAhCR;AAwCH,CA3CD;;AA4CA,OAAO,MAAMO,QAAQ,GAAID,MAAD,KAAa;AAACJ,EAAAA,IAAI,EAAEjB,MAAP;AAAgBqB,EAAAA;AAAhB,CAAb,CAAjB;AACP,OAAO,MAAME,UAAU,GAAIF,MAAD,KAAa;AAACJ,EAAAA,IAAI,EAAEhB,QAAP;AAAkBoB,EAAAA;AAAlB,CAAb,CAAnB;AACP,OAAO,MAAMG,UAAU,GAAIpB,KAAD,KAAY;AAACa,EAAAA,IAAI,EAAEf,SAAP;AAAmBE,EAAAA;AAAnB,CAAZ,CAAnB;AACP,eAAeU,YAAf","sourcesContent":["const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\n\n\n\nlet initialState = {\n\n    \n       users: [\n            {\n                id: 1,\n                followed: false,\n                FullName: 'Скарлет Йоханссон',\n                status: '11',\n               location: {city: 'Hollywood', country: 'USA'},\n                Ava: 'https://thumbs.dfs.ivi.ru/storage33/contents/f/b/722ce30ba1a228f9d1aa5650db3aea.jpg'\n            },\n           \n\n        ],\n        newTextPost: 'Новое сообщение'\n\n}\n\n\n\nconst usersreducer = (state = initialState , action) => {\n\n\n    switch(action.type)\n    {\n        case FOLLOW:{\n            let stateCopy = {\n                ...state,\n                users: state.users.map(u =>{\n                    if(u.id === action.userId )\n                    {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n        }\n            case UNFOLLOW:\n                {\n            let stateCopy = {\n                ...state,\n                users: state.users.map(u =>{\n                    if(u.id === action.userId )\n                    {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        }\n            case SET_USERS:\n                {\n                    return{...state, users:[...state.users, ...action.users ]}\n                }\n        default:\n            return state;\n        \n\n    }\n\n\n\n\n}\nexport const followAC = (userId) => ({type: FOLLOW , userId})\nexport const unfollowAC = (userId) => ({type: UNFOLLOW , userId})\nexport const setUsersAC = (users) => ({type: SET_USERS , users})\nexport default usersreducer;\n"]},"metadata":{},"sourceType":"module"}