{"ast":null,"code":"import { profileApi } from \"../../api/api\";\nconst UP_STATUS_TEXT = 'UP_STATUS_TEXT';\nconst UP_JOB = 'UP_JOB';\nconst UP_CITY = 'UP_CITY';\nconst SET_STATUS = 'SET_STATUS';\nconst SET_USER_ID = 'SET_USER_ID';\nlet InitialState = {\n  status: 'Статус',\n  job: 'Работа',\n  city: 'Город',\n  userId: ''\n};\n\nconst ProfileReducer = (state = InitialState, action) => {\n  switch (action.type) {\n    case SET_STATUS:\n      {\n        let copyState = { ...state\n        };\n        copyState.status = action.status;\n        return copyState;\n      }\n\n    case SET_USER_ID:\n      {\n        let copyState = { ...state\n        };\n        copyState.userId = action.userId;\n        return copyState;\n      }\n\n    case UP_STATUS_TEXT:\n      {\n        let copyState = { ...state\n        };\n        copyState.status = action.newTextMessage;\n        return copyState;\n      }\n\n    case UP_JOB:\n      {\n        let copyState = { ...state\n        };\n        copyState.job = action.NewTextJob;\n        return copyState;\n      }\n\n    case UP_CITY:\n      {\n        let copyState = { ...state\n        };\n        copyState.city = action.NewTextCity;\n        return copyState;\n      }\n\n    default:\n      return state;\n  }\n};\n\n_c = ProfileReducer;\nexport default ProfileReducer;\nexport const SetUserIdAC = userId => ({\n  type: SET_USER_ID,\n  userId\n});\n_c2 = SetUserIdAC;\nexport const SetStatusAC = status => ({\n  type: SET_STATUS,\n  status\n});\n_c3 = SetStatusAC;\nexport const UpdateStatusAC = newTextMessage => ({\n  type: UP_STATUS_TEXT,\n  newTextMessage\n});\n_c4 = UpdateStatusAC;\nexport const UpdateJobAC = NewTextJob => ({\n  type: UP_JOB,\n  NewTextJob\n});\n_c5 = UpdateJobAC;\nexport const UpdateCityAC = NewTextCity => ({\n  type: UP_CITY,\n  NewTextCity\n});\n_c6 = UpdateCityAC;\nexport const GetStatusThunk = userId => dispatch => {\n  profileApi.getStatus(userId).then(response => {\n    dispatch(SetStatusAC(response.data));\n  });\n};\nexport const GetUserIdThunk = userId => dispatch => {\n  profileApi.getProfileInfo(userId).then(response => {\n    dispatch(SetUserIdAC(response.data.id));\n  });\n};\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"ProfileReducer\");\n$RefreshReg$(_c2, \"SetUserIdAC\");\n$RefreshReg$(_c3, \"SetStatusAC\");\n$RefreshReg$(_c4, \"UpdateStatusAC\");\n$RefreshReg$(_c5, \"UpdateJobAC\");\n$RefreshReg$(_c6, \"UpdateCityAC\");","map":{"version":3,"sources":["/Users/malaahov/Documents/ReactJS/SocialNetwork/socialnetwork/src/redux/reducer/profilereducer.js"],"names":["profileApi","UP_STATUS_TEXT","UP_JOB","UP_CITY","SET_STATUS","SET_USER_ID","InitialState","status","job","city","userId","ProfileReducer","state","action","type","copyState","newTextMessage","NewTextJob","NewTextCity","SetUserIdAC","SetStatusAC","UpdateStatusAC","UpdateJobAC","UpdateCityAC","GetStatusThunk","dispatch","getStatus","then","response","data","GetUserIdThunk","getProfileInfo","id"],"mappings":"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","sourcesContent":["import {profileApi} from \"../../api/api\";\n\nconst UP_STATUS_TEXT= 'UP_STATUS_TEXT';\nconst UP_JOB='UP_JOB';\nconst UP_CITY='UP_CITY';\nconst SET_STATUS='SET_STATUS';\nconst SET_USER_ID='SET_USER_ID';\n\nlet InitialState = {\n    status: 'Статус',\n    job:'Работа',\n    city: 'Город',\n    userId:''\n}\n\n\nconst ProfileReducer = (state = InitialState, action) =>\n{\n    switch (action.type)\n    {\n        case SET_STATUS:\n        {\n\n               let copyState= {...state};\n               copyState.status= action.status;\n               return copyState;\n\n\n        }\n        case SET_USER_ID:\n        {\n            let copyState={...state};\n            copyState.userId=action.userId;\n            return copyState;\n        }\n        case UP_STATUS_TEXT:\n        {\n          let copyState= {...state};\n          copyState.status = action.newTextMessage;\n          return copyState;\n        }\n        case UP_JOB:\n        {\n            let copyState={...state};\n            copyState.job =action.NewTextJob;\n            return copyState;\n        }\n        case UP_CITY:\n        {\n            let copyState={...state};\n            copyState.city= action.NewTextCity;\n            return copyState;\n        }\n        default:\n            return state;\n    }\n\n}\n\nexport default ProfileReducer;\nexport const SetUserIdAC = (userId) => ({type:SET_USER_ID, userId});\nexport const SetStatusAC = (status) => ({type:SET_STATUS, status});\nexport const UpdateStatusAC = (newTextMessage) => ({type: UP_STATUS_TEXT, newTextMessage});\nexport const UpdateJobAC = (NewTextJob) => ({type:UP_JOB, NewTextJob});\nexport const UpdateCityAC = (NewTextCity) => ({type:UP_CITY, NewTextCity});\n\n\n\nexport const GetStatusThunk = (userId) => (dispatch) => {\n\n    profileApi.getStatus(userId).then(response => {\n\n        dispatch(SetStatusAC(response.data));\n\n    });\n}\n\n    export const GetUserIdThunk = (userId) => (dispatch) =>{\n\n        profileApi.getProfileInfo(userId).then(response =>{\n\n            dispatch(SetUserIdAC(response.data.id));\n\n        });\n}"]},"metadata":{},"sourceType":"module"}